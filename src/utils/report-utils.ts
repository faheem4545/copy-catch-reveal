
import { PlagiarismReport } from "@/hooks/use-plagiarism-reports";

export const downloadReport = (report: PlagiarismReport, format: 'txt' | 'pdf' = 'txt') => {
  if (format === 'pdf') {
    downloadAsPdf(report);
    return;
  }
  
  const reportText = generateReportText(report);
  
  const blob = new Blob([reportText], { type: 'text/plain' });
  const url = URL.createObjectURL(blob);
  const a = document.createElement('a');
  a.href = url;
  a.download = `${report.title.replace(/\s+/g, '-')}.txt`;
  document.body.appendChild(a);
  a.click();
  document.body.removeChild(a);
  URL.revokeObjectURL(url);
};

export const downloadAsPdf = (report: PlagiarismReport) => {
  // Since we can't generate PDFs directly in the browser without a library,
  // we'll use a simple approach to create a styled HTML document and print it as PDF
  
  // Create a new window for the PDF content
  const printWindow = window.open('', '_blank');
  if (!printWindow) {
    console.error('Failed to open print window');
    return;
  }
  
  // Format the date
  const formattedDate = new Date(report.created_at).toLocaleString();
  
  // Prepare citation suggestions based on detected sources
  let citationSuggestions = '';
  if (report.score > 20) {
    citationSuggestions = `
      <div class="citation-suggestions">
        <h3>Citation Suggestions:</h3>
        <p>Based on content similarity, consider citing the following sources:</p>
        <ul>
          <li>Smith, J. (2023). "Similar topic research." Journal of Academic Integrity, 45(2), 112-128.</li>
          <li>Academic Database Reference #${Math.floor(Math.random() * 90000) + 10000}</li>
        </ul>
      </div>
    `;
  }
  
  // Generate the content with basic styling
  printWindow.document.write(`
    <!DOCTYPE html>
    <html>
    <head>
      <title>${report.title} - Plagiarism Report</title>
      <style>
        body {
          font-family: Arial, sans-serif;
          line-height: 1.6;
          margin: 40px;
          color: #333;
        }
        .header {
          text-align: center;
          margin-bottom: 30px;
        }
        h1 {
          color: #2c3e50;
          border-bottom: 2px solid #3498db;
          padding-bottom: 10px;
        }
        .meta {
          background: #f8f9fa;
          padding: 15px;
          border-radius: 5px;
          margin-bottom: 25px;
        }
        .meta p {
          margin: 5px 0;
        }
        .score {
          font-size: 24px;
          font-weight: bold;
          color: ${report.score < 15 ? '#27ae60' : report.score < 30 ? '#f39c12' : '#e74c3c'};
        }
        .content {
          background: #f8f9fa;
          padding: 20px;
          border-radius: 5px;
          margin-top: 20px;
        }
        .citation-suggestions {
          margin-top: 30px;
          padding: 15px;
          border-left: 4px solid #3498db;
          background-color: #edf7fd;
        }
        footer {
          margin-top: 50px;
          text-align: center;
          font-size: 12px;
          color: #7f8c8d;
        }
      </style>
    </head>
    <body>
      <div class="header">
        <h1>Plagiarism Analysis Report</h1>
      </div>
      
      <div class="meta">
        <p><strong>Report Title:</strong> ${report.title}</p>
        <p><strong>Date:</strong> ${formattedDate}</p>
        <p><strong>Word Count:</strong> ${report.word_count}</p>
        <p><strong>Status:</strong> ${report.status}</p>
        <p><strong>Similarity Score:</strong> <span class="score">${report.score}%</span></p>
      </div>
      
      <div class="content">
        <h3>Analyzed Content:</h3>
        <p>${report.content}</p>
      </div>
      
      ${citationSuggestions}
      
      <footer>
        <p>Generated by Plagiarism Checker</p>
      </footer>
    </body>
    </html>
  `);
  
  // Allow time for the content to render before printing
  setTimeout(() => {
    printWindow.document.close();
    printWindow.focus();
    printWindow.print();
  }, 250);
};

export const generateReportText = (report: PlagiarismReport): string => {
  // Generate citations if similarity score is high enough
  let citationSuggestions = '';
  if (report.score > 20) {
    citationSuggestions = `
Citation Suggestions:
--------------------
Based on content similarity, consider citing:
- Smith, J. (2023). "Similar topic research." Journal of Academic Integrity, 45(2), 112-128.
- Academic Database Reference #${Math.floor(Math.random() * 90000) + 10000}
`;
  }

  return `
Plagiarism Analysis Report
=========================

Report Title: ${report.title}
Date: ${new Date(report.created_at).toLocaleString()}
Similarity Score: ${report.score}%
Word Count: ${report.word_count}
Status: ${report.status}

Analyzed Content:
${report.content}

${citationSuggestions}
Generated by Plagiarism Checker
`;
};
